opam-version: "2.0"
name: "ppx_poly_record"
version: "1.3.0"
synopsis: "ppx for polymorphic records"
description: """
Polymorphic record in OCaml
=====================================

This ppx adds an extension point `[%poly_record <exp>]` for polymorphic record.

In side `[%poly_record <exp>]`, the record syntax `{ l = e; .. }`, 
`{ e with l = e'; .. }`, `r.l` and `r.l <- e` become for polymorphic records
whose type is `_ Ppx_poly_record.Poly_record.t`. The field information is
encoded into OCaml's object type. For example:

```ocaml
# [%poly_record { x = 1; y = 1.0 }];;
- : < x : int; y : float > Ppx_poly_record.Poly_record.t = <abstr>
```

Implementation of `_ PPx_poly_record.Poly_record.t` is not by OCaml objects:
it has no method table inside therefore safely serializable between different
programs if its fields have no functional value."""
maintainer: "jun.furuse@gmail.com"
authors: "Jun Furuse"
homepage: "https://bitbucket.org/camlspotter/ppx_poly_record"
bug-reports:
  "https://bitbucket.org/camlspotter/ppx_poly_record/issues?status=new&status=open"
depends: [
  "jbuilder" {build}
  "ocaml" {>= "4.03.0"}
  "ppxx" {>= "2.3.0" & < "2.4.0"}
]
build: ["jbuilder" "build" "-p" name "-j" jobs]
dev-repo: "hg+https://bitbucket.org/camlspotter/ppx_poly_record"
url {
  src: "https://bitbucket.org/camlspotter/ppx_poly_record/get/1.3.0.tar.gz"
  checksum: "md5=3dff075d8caf67d771efa6afa8391a26"
}
