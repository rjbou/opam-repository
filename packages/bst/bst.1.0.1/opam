opam-version: "2.0"
name: "bst"
version: "1.0.1"
synopsis: "Bisector tree implementation in OCaml."
description: """
A bisector tree allows to do fast but exact nearest neighbor searches
in any space provided that you have a metric (function) to measure the
distance between any two points in that space.
Cf. this article for details:
"A Data Structure and an Algorithm for the Nearest Point Problem";
Iraj Kalaranti and Gerard McDonald.
ieeexplore.ieee.org/iel5/32/35936/01703102.pdf"""
maintainer: "unixjunkie@sdf.org"
authors: "Francois BERENGER"
license: "BSD-3"
homepage: "https://github.com/UnixJunkie/bisec-tree"
bug-reports: "https://github.com/UnixJunkie/bisec-tree/issues"
depends: [
  "jbuilder" {build}
  "ocaml" {>= "4.03.0"}
]
build: ["jbuilder" "build" "-p" name "-j" jobs]
dev-repo: "git+https://github.com/UnixJunkie/bisec-tree.git"
url {
  src: "https://github.com/UnixJunkie/bisec-tree/archive/v1.0.1.tar.gz"
  checksum: "md5=baaacd991615279629aa7bd6464933d6"
}
